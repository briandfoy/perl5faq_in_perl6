=begin pod

=head1 General Perl 6 Language Issues

=head2 Can I get a BNF/yacc/RE for the Perl 6 language?

=head2 What are all these $@%&* punctuation signs, and how do I know when to use them?

=head2 Do I always/never have to quote my strings or use semicolons and commas?

=head2 How do I skip some return values?

=head2 How do I temporarily block warnings?

=head2 What's an extension?

=head2 Why do Perl 6 operators have different precedence than C operators?

=head2 How do I declare/create a structure?

=head2 How do I create a module?

=head2 How do I adopt or take over a module already on CPAN?

=head2 How do I create a class?

=head2 How can I tell if a variable is tainted?

=head2 What's a closure?

=head2 What is variable suicide and how can I prevent it?

=head2 How can I pass/return a {Function, FileHandle, Array, Hash, Method, Regex}?

You don't have to do anything special to pass around objects of any sort. Provide them as an argument and that's it:

	sub some-func ( $something ) {
		put "I got " ~ $something.^name;
		}

	# Pass a regex
	some-func rx/ <[1..9]> /;

	# Pass a handle
	my $fh = open 'some-file', :w;
	some-func $fh;

	# Pass an array
	my @array = [ 1, 2, 3 ];
	some-func @array;

	# Pass a hash
	my %hash = %( cat => 1, dog => 2, bird => 3 );
	some-func %hash;

	# Pass a function
	some-func &some-func;

Returning any sort of object is as easy. Everything is an object so you can pass them around without anything happening to them along the way:

	sub some-func {
		...; # do something
		return $some-object;
		}

=head2 How do I create a static variable?

=head2 What's the difference between dynamic and lexical (static) scoping? Between C<local()> and C<my()>?

=head2 How can I access a dynamic variable while a similarly named lexical is in scope?

=head2 What's the difference between deep and shallow binding?

=head2 Why doesn't "my($foo) = E<lt>$fhE<gt>;" work right?

=head2 How do I redefine a builtin function, operator, or method?

=head2 What's the difference between calling a function as C<&foo> and C<foo()>?

=head2 How do I create a switch or case statement?

You don't need to because it's builtin! Use C<given-when>!

=head2 How can I catch accesses to undefined variables, functions, or methods?

=head2 Why can't a method included in this same file be found?

=head2 How can I find out my current or calling package?

=head2 How can I comment out a large block of Perl 6 code?

=head2 How do I clear a package?

=head2 How can I use a variable as a variable name?

=head2 What does "bad interpreter" mean?

The "bad interpreter" message comes from the shell, not perl6. The actual message may vary depending on your platform, shell, and locale settings.

If you see "bad interpreter - no such file or directory", the first line in your script (the "shebang" line) does not contain the right path to perl6 (or any other program capable of running scripts). Sometimes this happens when you move the script from one machine to another and each machine has a different path to perlâ€“F</usr/bin/perl6> versus F</usr/local/bin/perl6> for instance. It may also indicate that the source machine has CRLF line terminators and the destination machine has LF only: the shell tries to find F<</usr/bin/perl<CR>>>, but can't.

If you see "bad interpreter: Permission denied", you need to make your script executable.

In either case, you should still be able to run the scripts with B<perl6> explicitly:

    % perl6 script.p6

If you get a message like "perl6: command not found", B<perl6> is not in your PATH, which might also mean that the location of B<perl6> is not where you expect it so you need to adjust your shebang line.

=head2 Do I need to recompile XS modules when there is a change in the C library?

=end pod
